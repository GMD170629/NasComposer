version: '3'
services:
  ### Nextcloud #######################################################################
  nextcloud-db:
    container_name: hexo
    image: mariadb:10.6
    restart: always
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW
    volumes:
      -  ${APP_BASE_DIR}/nextcloud/storage:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=JntoFg8o
      - MYSQL_PASSWORD=JntoFg8o
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
    envfile:
      - stack.env
      
  nextcloud-redis:
    image: redis:alpine
    restart: always
  nextcloud-app:
    image: nextcloud:fpm
    restart: always
    links:
      - nextcloud-db
    volumes:
      - ${APP_BASE_DIR}/nextcloud/config:/var/www/html
      - ${APP_BASE_DIR}/nextcloud/data:/var/www/html/data
    environment:
      - MYSQL_PASSWORD=JntoFg8o
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_HOST=db
      - REDIS_HOST=redis
      - OVERWRITEHOST=${NEXTCLOUD_OVERWRITEHOST}
      - OVERWRITEPROTOCOL=${NEXTCLOUD_OVERWRITEPROTOCOL}
      - OVERWRITECLIURL=${NEXTCLOUD_OVERWRITECLIURL}
    envfile:
      - stack.env

  nextcloud-cron:
    image: nextcloud:fpm
    restart: always
    volumes:
      - ${APP_BASE_DIR}/nextcloud/config:/var/www/html:z
      - ${APP_BASE_DIR}/nextcloud/data:/var/www/html/data
    entrypoint: /cron.sh
    depends_on:
      - nextcloud-db
      - nextcloud-redis
    envfile:
      - stack.env

  nextcloud-web:
    image: nginx
    restart: always
    ports:
      - ${NEXTCLOUD_PORT}:80
    links:
      - nextcloud-app
    volumes:
      -  ${APP_BASE_DIR}/nextcloud/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    volumes_from:
      - nextcloud-app
    envfile:
      - stack.env

  ### Homepage #######################################################################
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    ports:
      - ${HOMEPAGE_PORT}:3000
    volumes:
      - ${APP_BASE_DIR}/homepage/config:/app/config # Make sure your local config directory 
      - ${DOCKER_SOCKET}:/var/run/docker.sock:ro # (optional) For docker integrations
      - /:/srv
      - ${APP_BASE_DIR}/homepage/config/images:/app/public/images
      - ${APP_BASE_DIR}/homepage/config/icons:/app/public/icons
    envfile:
      - stack.env

  ### Swag #######################################################################
  swag:
    image: linuxserver/swag:latest
    container_name: swag
    environment:
      - TZ=${TZ}
      - URL=${SWAG_URL}
      - SUBDOMAINS=${SWAG_SUBDOMAINS}
      - VALIDATION=${SWAG_VALIDATION}
      - DNSPLUGIN=${SWAG_DNSPLUGIN}
    volumes:
      - ${APP_BASE_DIR}/swag:/config
      - ${APP_BASE_DIR}/swag-ssl:/swag-ssl
    ports:
      - ${SWAG_PORT_HTTP}:80
      - ${SWAG_PORT_HTTPS}:443
    restart: unless-stopped
    envfile:
      - stack.env
  
  ### Kodexplorer #######################################################################
  kodexplorer:
    image: yangxuan8282/kodexplorer:latest
    container_name: kodexplorer
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ${APP_BASE_DIR}/kodbox/data:/var/www/html
      - /:/srv
    ports:
      - ${KODX_PORT}:80
    restart: unless-stopped

  ### Hexo #######################################################################
  hexo:
    container_name: hexo
    image: bloodstar/hexo:latest
    hostname: hexo
    ports:
      - ${HEXO_PORT}:4000
    volumes:
      - ${APP_BASE_DIR}/hexo:/app
    environment:
      - PUID=${PGID}
      - PGID=${PGID}
      - TZ=${TZ}
      - GIT_USER=${HEXO_GIT_USER}
      - GIT_EMAIL=${HEXO_GIT_EMAIL}
    envfile:
      - stack.env
    restart: always


